{"version":3,"file":"static/js/976.efd0770b.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/Contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.js","components/ContactsList/ContactList.styled.js","components/ContactsList/ContactsList.jsx","components/Error/Error.styled.js","components/Error/Error.js","components/Loader/Loader.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const FormWraper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  border: ${p => p.theme.borders.black};\n  padding: ${p => p.theme.spasing(3)};\n  margin-bottom: ${p => p.theme.spasing(5)};\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n`;\n\nexport const InputTitle = styled.span`\n  display: block;\n  margin-bottom: ${p => p.theme.spasing(3)};\n  font-weight: ${p => p.theme.weight.accent};\n`;\n\nexport const FieldWraper = styled.span`\n  display: block;\n  margin-bottom: ${p => p.theme.spasing(5)};\n`;\n\nexport const StyleField = styled(Field)`\n  width: 100%;\n  display: block;\n  border: ${p => p.theme.borders.gray};\n  border-radius: ${p => p.theme.spasing(1)};\n`;\n\nexport const StyleErrorMessage = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.error};\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport {\n  FormWraper,\n  Label,\n  InputTitle,\n  FieldWraper,\n  StyleField,\n  StyleErrorMessage,\n} from './ContactForm.styled';\nimport { Button } from '../ContactItem/ContactItem.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/Contacts/operations';\nimport { selectContacts } from 'redux/Contacts/selectors';\n\nconst schema = yup.object().shape({\n  name: yup.string().min(2).required('Enter a name'),\n  number: yup\n    .string()\n    .matches(/(?:([+]\\d{1,4})[-.\\s]?)?(?:[(](\\d{1,3})[)][-.\\s]?)?(\\d{1,4})[-.\\s]?(\\d{1,4})[-.\\s]?(\\d{1,9})/g, 'Enter a phone number with at least 9 digits')\n    .required('Enter a phone number'),\n});\n\nexport const ContactForm = () => {\n  const contactList = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (newContact, { resetForm }) => {\n    const checkContact = contactList.some(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    if (checkContact) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n\n  return (\n    <>\n    <h1>Phonebook</h1>\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <FormWraper>\n          <Label>\n            <InputTitle>Name</InputTitle>\n            <FieldWraper>\n              <StyleField type=\"text\" name=\"name\" placeholder=\"Enter a name\" />\n              <StyleErrorMessage name=\"name\" component=\"div\" />\n            </FieldWraper>\n          </Label>\n          <Label>\n            <InputTitle>Number</InputTitle>\n            <FieldWraper>\n              <StyleField\n                type=\"tel\"\n                name=\"number\"\n                placeholder=\"Enter a phone number\"\n              />\n              <StyleErrorMessage name=\"number\" component=\"div\" />\n            </FieldWraper>\n          </Label>\n          <Button type=\"submit\">Add contact</Button>\n        </FormWraper>\n      </Form>\n      </Formik>\n      </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterTitle = styled.span`\n  display: block;\n  font-weight: ${p => p.theme.weight.accent};\n  font-size: 16px;\n  margin-bottom: ${p => p.theme.spasing(3)};\n`;\n\nexport const StyleInput = styled.input`\n  display: block;\n  margin-bottom: ${p => p.theme.spasing(5)};\n  width: 100%;\n  border: ${p => p.theme.borders.gray};\n  border-radius: ${p => p.theme.spasing(1)};\n`;\n","import { useDispatch } from 'react-redux';\nimport { FilterTitle, StyleInput } from './Filter.styled';\nimport { findContact } from 'redux/Contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <h2>Contacts</h2>\n      <label>\n        <FilterTitle>Find contacts by name</FilterTitle>\n        <StyleInput\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Search\"\n          onChange={evt => dispatch(findContact(evt.target.value))}\n        />\n      </label>\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { ContactData, Span, Button } from './ContactItem.styled';\nimport { deleteContact } from 'redux/Contacts/operations';\n\nexport const ContactItem = ({ contactItem: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <ContactData>\n        {name}: <Span>{number}</Span>\n      </ContactData>\n      <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </Button>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0;\n  overflow-y: scroll;\n\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${p => p.theme.spasing(2)};\n\n  & + & {\n    border-top: 1px solid ${p => p.theme.colors.lightGray};\n\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { List, ListItem } from './ContactList.styled';\nimport { selectVisibleContacts } from 'redux/Contacts/selectors';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const sortedContacts = [...contacts].sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n\n  return (\n    <List>\n      {sortedContacts.map(contact => (\n        <ListItem key={contact.id}>\n          <ContactItem contactItem={contact} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ErrorMessage = styled.b`\ntext-align: center;\n  color: ${p => p.theme.colors.error};\n`;\n","import { ErrorMessage } from './Error.styled';\n\nexport const Error = ({ message }) => <ErrorMessage>{message}</ErrorMessage>;\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <ThreeDots\n    height=\"80\"\n    width=\"80\"\n    radius=\"9\"\n    color=\"#4fa94d\"\n    ariaLabel=\"three-dots-loading\"\n    wrapperStyle={{ justifyContent: 'center' }}\n    wrapperClassName=\"\"\n    visible={true}\n  />\n);\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { fetchContacts } from '../redux/Contacts/operations';\nimport { selectIsLoading, selectError } from 'redux/Contacts/selectors';\nimport { selectVisibleContacts } from 'redux/Contacts/selectors';\nimport { Error } from 'components/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Contacts() {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <title>Your contacts</title>\n        </Helmet>\n      </HelmetProvider>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      {contacts.length > 0 && <ContactsList />}\n      {isLoading && <Loader />}\n      {error && <Error message={error} />}\n    </>\n  );\n}\n"],"names":["FormWraper","styled","_templateObject","_taggedTemplateLiteral","p","theme","borders","black","spasing","Label","_templateObject2","InputTitle","_templateObject3","weight","accent","FieldWraper","_templateObject4","StyleField","Field","_templateObject5","gray","StyleErrorMessage","ErrorMessage","_templateObject6","colors","error","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","schema","yup","shape","min","required","number","matches","ContactForm","contactList","useSelector","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","Formik","initialValues","validationSchema","onSubmit","newContact","_ref","resetForm","some","alert","concat","addContact","Form","autoComplete","type","placeholder","component","Button","FilterTitle","StyleInput","Filter","onChange","evt","findContact","target","value","ContactItem","_ref$contactItem","contactItem","id","ContactData","Span","onClick","deleteContact","List","ListItem","lightGray","ContactsList","sortedContacts","_toConsumableArray","sort","a","b","localeCompare","map","Error","message","Loader","ThreeDots","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","Contacts","useEffect","fetchContacts","HelmetProvider","Helmet","length"],"sourceRoot":""}